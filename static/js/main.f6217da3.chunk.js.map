{"version":3,"sources":["components/SummonerIcon/SummonerIcon.js","components/SummonerRankedStats/SummonerRankedStatsSingle.js","components/SummonerRankedStats/SummonerRankedStatsTTF.js","components/SummonerRankedStats/SummonerRankedStats.js","components/SummonerMasteryPoints/SumonerMasteryPointsSingle.js","components/SummonerMasteryPoints/SummonerMasteryPoints.js","components/SummonerHistoryGames/Items/SummonerHistoryItemsSingle.js","components/SummonerHistoryGames/Items/SummonerHistoryItemsList.js","components/SummonerHistoryGames/SinglePlayer/SummonerHistorySinglePlayer.js","components/SummonerHistoryGames/Teams/SummonerHistoryGamesTeams.js","components/SummonerHistoryGames/SingleTeam/SummonerHistorySingleTeamItem.js","components/SummonerHistoryGames/SingleTeam/SummonerHistorySingleTeam.js","components/SummonerHistoryGames/SummonerHistoryGamesSingle.js","components/SummonerHistoryGames/SummonerHistoryGames.js","components/SummonerData.js","components/App.js","index.js"],"names":["SummonerIcon","props","fetchSummonerData","fetch","cors","region","summoner","id","apiKey","then","resp","json","data","length","soloRank","forEach","ele","queueType","push","tier","rank","leaguePoints","setState","summonerId","state","this","Fragment","className","src","patch","profileIconId","alt","toLowerCase","summonerLevel","name","charAt","toUpperCase","slice","points","Component","SummonerRankedStatsSingle","queue","wins","losses","toFixed","SummonerRankedStatsTTF","fetchRankedStats","ttfData","summonerName","resp0","data0","status","status_code","catch","err","console","log","undefined","SummonerRankedStats","leagueId","rankedStats","singleRank","map","single","key","SummonerMasteryPoints","nickName","champName","champNames","champId","champLevel","champPoints","toString","replace","fetchMasteryData","masteryPoints","i","championLevel","championPoints","championId","masteryData","champMastery","SummonerHistoryItemsSingle","SummonerHistoryItemsList","singleItem","itemList","item0","item1","item2","item3","item4","item5","item6","filter","index","SummonerHistorySinglePlayer","lane","playerStats","timeline","role","getSummonerLane","champion","getChampionName","spell1Id","spell2Id","stats","perk0","perkSubStyle","kills","deaths","assists","goldEarned","totalMinionsKilled","totalDamageDealtToChampions","wardsPlaced","SummonerHistoryGamesTeams","teamData","teamId","win","inhibitorKills","towerKills","dragonKills","baronKills","riftHeraldKills","SummonerHistorySingleTeamItem","playerData","nick","SummonerHistorySingleTeam","singlePlayer","player","participantId","nickname","getSinglePlayerStats","SummonerHistoryGamesSingle","fetchGameData","matchId","response","gameData","Object","entries","value","teamOne","teamTwo","teamOneParticipants","teamTwoParticipants","profileIcon","teamOneData","teamTwoData","getQueueName","queueId","getGameDuration","nrOfSecond","pad","num","size","time","parseFloat","hours","Math","floor","minutes","getMainSummonerData","teamOneStats","teamTwoStats","el","handleClick","currentState","active","onClick","SummonerHistoryGames","fetchHistoryGamesData","accountId","matches","history","singleGame","gameHistory","gameId","icon","SummonerData","icons","summData","App","handleChange","event","target","handleChangeSelect","insertNickname","document","querySelector","serverResp","Error","summonerData","error","handleKeyPress","patchVersion","profileIcons","response1","data1","values","version","response2","data2","parseInt","onChange","defaultValue","type","placeholder","onKeyPress","ReactDOM","render","getElementById"],"mappings":"keAwEeA,G,8BApEX,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAOVC,kBAAoB,WACZC,MAAM,GAAD,OAAI,EAAKF,MAAMG,KAAf,mBAA8B,EAAKH,MAAMI,OAAzC,gEAAuG,EAAKJ,MAAMK,SAASC,GAA3H,oBAAyI,EAAKN,MAAMO,SACxJC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAG,GACF,GAAmB,IAAhBA,EAAKC,OAAa,CACjB,IAAMC,EAAW,GACjBF,EAAKG,SAAQ,SAAAC,GACY,oBAAlBA,EAAIC,WACHH,EAASI,KAAK,CAAC,KAAQF,EAAIG,KAAM,KAAQH,EAAII,KAAM,OAAUJ,EAAIK,kBAGzE,EAAKC,SAAS,CAACF,KAAMN,EAAUS,WAAY,EAAKtB,MAAMK,SAASC,SAC5D,CAEH,EAAKe,SAAS,CAACF,KADE,CAAC,CAAC,KAAQ,WAAY,KAAQ,GAAI,OAAU,KAC9BG,WAAY,EAAKtB,MAAMK,SAASC,UApB3E,EAAKiB,MAAQ,CACTD,WAAY,GACZH,KAAM,IAJK,E,iFA8BfK,KAAKvB,sB,+BAQL,MAJ6B,KAA1BuB,KAAKD,MAAMD,YAAqBE,KAAKD,MAAMD,aAAeE,KAAKxB,MAAMK,SAASC,IAC7EkB,KAAKvB,oBAIL,kBAAC,IAAMwB,SAAP,KAC4B,IAA3BD,KAAKD,MAAMJ,KAAKP,OACjB,yBAAKc,UAAU,mCACX,yBAAKA,UAAU,+BACX,yBAAKC,IAAG,kDAA6CH,KAAKxB,MAAM4B,MAAxD,4BAAiFJ,KAAKxB,MAAMK,SAASwB,cAArG,QACRC,IAAI,gBACJJ,UAAU,4BACmB,aAA5BF,KAAKD,MAAMJ,KAAK,GAAGD,KACpB,yBAAKS,IAA+C,gBAA1CH,KAAKD,MAAMJ,KAAK,GAAGD,KAAKa,cAAkC,mCAA1D,gCAAwHP,KAAKD,MAAMJ,KAAK,GAAGD,KAAKa,cAAhJ,QACVD,IAAI,cACJJ,UAAU,8BAAgC,GAC1C,uBAAGA,UAAU,uBAAuBF,KAAKxB,MAAMK,SAAS2B,gBAE5D,yBAAKN,UAAU,gCACX,wBAAIA,UAAU,0BAA0BF,KAAKxB,MAAMK,SAAS4B,MAC5D,yBAAKN,IAAG,kCAA6BH,KAAKD,MAAMJ,KAAK,GAAGD,KAAhD,QAA4DY,IAAI,gBAAgBJ,UAAU,4BAClG,uBAAGA,UAAU,uBACT,0BAAMA,UAAU,8BAA8BF,KAAKD,MAAMJ,KAAK,GAAGD,KAAKa,cAAcG,OAAO,GAAGC,cAAgBX,KAAKD,MAAMJ,KAAK,GAAGD,KAAKa,cAAcK,MAAM,GAAK,MAC/J,0BAAMV,UAAU,8BAA8BF,KAAKD,MAAMJ,KAAK,GAAGA,KAAO,OACvEK,KAAKD,MAAMJ,KAAK,GAAGkB,OAAS,SAIvC,Q,GA/DaC,cCsBZC,G,YAtBmB,SAACvC,GAAW,IAGjBwC,EAHgB,EACaxC,EAAMmB,KAArDH,EADkC,EAClCA,UAAWE,EADuB,EACvBA,KAAMC,EADiB,EACjBA,KAAMkB,EADW,EACXA,OAAQI,EADG,EACHA,KAAMC,EADH,EACGA,OAQ5C,OACI,yBAAKhB,UAAU,8CACX,yBAAKC,IAAG,kCAA6BT,EAA7B,QAAyCY,IAAI,gBAAgBJ,UAAU,2BAC/E,yBAAKA,UAAU,yBACX,uBAAGA,UAAU,yBATR,qBADQc,EAUyCxB,GATvB,cACpB,mBAAVwB,EAAmC,mBAAvC,GASG,wBAAId,UAAU,wBAAwBR,EAAKgB,OAAO,GAAKhB,EAAKa,cAAcK,MAAM,GAA1C,WAAmDjB,IACzF,uBAAGO,UAAU,sBAAsBW,EAAS,OAC5C,uBAAGX,UAAU,qBAAb,UAAqCe,EAArC,aAA8CC,EAA9C,cAA4F,KAAjCD,GAAMA,EAAOC,IAASC,QAAQ,GAAzF,WCqCDC,E,YArDX,WAAY5C,GAAO,IAAD,8BACd,4CAAMA,KAOV6C,iBAAmB,WACf,IAAMC,EAAU,GAEhB5C,MAAM,GAAD,OAAI,EAAKF,MAAMG,KAAf,mBAA8B,EAAKH,MAAMI,OAAzC,gEAAuG,EAAKJ,MAAM+C,aAAlH,oBAA0I,EAAK/C,MAAMO,SACzJC,MAAK,SAAAwC,GAAK,OAAIA,EAAMtC,UACpBF,MAAK,SAAAyC,GAC8B,MAA7BA,EAAMC,OAAOC,aAAqBjD,MAAM,GAAD,OAAI,EAAKF,MAAMG,KAAf,mBAA8B,EAAKH,MAAMI,OAAzC,gEAAuG6C,EAAM3C,GAA7G,oBAA2H,EAAKN,MAAMO,YAInL6C,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MACzB7C,MAAK,SAAAC,GAAI,YAAa+C,IAAT/C,EAAqBA,EAAKC,OAAS,MAChDF,MAAK,SAAAG,GAEiB,IAAhBA,EAAKC,QACJkC,EAAQ7B,KAAK,CAAC,KAAQN,EAAK,GAAGO,KAAK,KAAQP,EAAK,GAAGQ,KAAM,OAAUR,EAAK,GAAGS,aAAa,KAAQT,EAAK,GAAG8B,OACxG,EAAKpB,SAAS,CAACC,WAAY,EAAKtB,MAAMsB,WAAYwB,QAASA,KACpC,IAAhBnC,EAAKC,SACZkC,EAAQ7B,KAAK,CAAC,KAAQ,WAAW,KAAQ,GAAI,OAAU,EAAE,KAAQ,IACjE,EAAKI,SAAS,CAACC,WAAY,EAAKtB,MAAMsB,WAAYwB,QAASA,SAzBnE,EAAKvB,MAAM,CACPD,WAAY,GACZwB,QAAS,IAJC,E,sEAmCd,MAD6B,KAA1BtB,KAAKxB,MAAMsB,YAAqBE,KAAKD,MAAMD,aAAeE,KAAKxB,MAAMsB,YAAYE,KAAKqB,mBAErF,oCAC+B,IAA9BrB,KAAKD,MAAMuB,QAAQlC,OACf,yBAAKc,UAAU,+DACf,yBAAKC,IAAG,kCAA6BH,KAAKD,MAAMuB,QAAQ,GAAG5B,KAAnD,QAA+DY,IAAI,gBAAgBJ,UAAU,2BACrG,yBAAKA,UAAU,yBACX,uBAAGA,UAAU,yBAAb,cACA,wBAAIA,UAAU,wBAAwBF,KAAKD,MAAMuB,QAAQ,GAAG5B,KAAKgB,OAAO,GAAKV,KAAKD,MAAMuB,QAAQ,GAAG5B,KAAKa,cAAcK,MAAM,GAAtF,WAA+FZ,KAAKD,MAAMuB,QAAQ,GAAG3B,OAC3J,uBAAGO,UAAU,sBAAsBF,KAAKD,MAAMuB,QAAQ,GAAGT,OAAS,OAClE,uBAAGX,UAAU,mBAAmBF,KAAKD,MAAMuB,QAAQ,GAAGL,KAAtD,WAGP,Q,GAhDuBH,aCgDtBmB,E,YA7CX,WAAYzD,GAAQ,IAAD,8BACf,4CAAMA,KAQV6C,iBAAmB,WACf3C,MAAM,GAAD,OAAI,EAAKF,MAAMG,KAAf,mBAA8B,EAAKH,MAAMI,OAAzC,gEAAuG,EAAKJ,MAAMK,SAASC,GAA3H,oBAAyI,EAAKN,MAAMO,SACpJC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAG,GACF,IAAME,EAAW,GACjBF,EAAKG,SAAQ,SAAAC,GAAG,OACZF,EAASI,KAAK,CAAC,GAAMF,EAAI2C,SACV,UAAa3C,EAAIC,UACjB,KAAQD,EAAIG,KACZ,KAAQH,EAAII,KACZ,OAAWJ,EAAIK,aACf,KAAQL,EAAI0B,KACZ,OAAU1B,EAAI2B,YAEjC,EAAKrB,SAAS,CAACsC,YAAa9C,EAAUS,WAAY,EAAKtB,MAAMK,SAASC,GAAIyC,aAAc,EAAK/C,MAAMK,SAAS4B,WArBpH,EAAKV,MAAQ,CACTD,WAAY,GACZqC,YAAa,GACbZ,aAAc,IALH,E,sEA4Be,KAA3BvB,KAAKxB,MAAMK,SAASC,IAAakB,KAAKD,MAAMD,aAAeE,KAAKxB,MAAMK,SAASC,IAAIkB,KAAKqB,mBAC3F,IAAMe,EAAcpC,KAAKD,MAAMoC,YAAYE,KAAI,SAAAC,GAAM,OAAI,kBAAC,EAAD,CAA2BC,IAAKD,EAAOxD,GAAIa,KAAM2C,OAC9G,OACI,kBAAC,IAAMrC,SAAP,KACuC,IAAlCD,KAAKD,MAAMoC,YAAY/C,OACpB,yBAAKc,UAAU,0CACdkC,EACA,kBAAC,EAAD,CAAwBtC,WAAYE,KAAKD,MAAMD,WAAYyB,aAAcvB,KAAKD,MAAMwB,aAAc5C,KAAMqB,KAAKxB,MAAMG,KAAMC,OAAQoB,KAAKxB,MAAMI,OAAQG,OAAQiB,KAAKxB,MAAMO,UAG1K,Q,GAvCoB+B,aCkCnB0B,G,kBAlCX,WAAYhE,GAAQ,IAAD,8BACf,4CAAMA,KACDuB,MAAO,CACR0C,SAAU,IAHC,E,iFAOE,IAAD,OACZC,EAAY,GAChB1C,KAAKxB,MAAMmE,WAAWrD,SAAQ,SAAAgD,GACvBA,EAAOC,MAAQ,EAAK/D,MAAMoE,UAASF,EAAUJ,EAAO7B,SAG/DT,KAAKH,SAAS,CAAC4C,SAAUC,M,+BAOrB,OACI,kBAAC,IAAMzC,SAAP,KAC6B,KAAxBD,KAAKD,MAAM0C,SACZ,yBAAKvC,UAAU,iCACX,yBAAKC,IAAG,kDAA6CH,KAAKxB,MAAM4B,MAAxD,yBAA8EJ,KAAKD,MAAM0C,SAAzF,QAAyGnC,IAAI,oBAAoBJ,UAAU,iCACnJ,yBAAKC,IAAG,8BAAyBH,KAAKxB,MAAMqE,WAApC,QAAsDvC,IAAI,kBAAkBJ,UAAU,sCAC9F,uBAAGA,UAAU,qCAAoC,0BAAMA,UAAU,2CAA2CF,KAAKxB,MAAMsE,YAAYC,WAAWC,QAAQ,0BAA2B,QAAjL,SAEF,Q,GA7BkBlC,cC6CrB0B,G,kBA3CX,WAAYhE,GAAQ,IAAD,8BACf,4CAAMA,KAOVyE,iBAAmB,WACfvE,MAAM,GAAD,OAAI,EAAKF,MAAMG,KAAf,mBAA8B,EAAKH,MAAMI,OAAzC,qFAA4H,EAAKJ,MAAMK,SAASC,GAAhJ,oBAA8J,EAAKN,MAAMO,SAC7KC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAG,GACF,IAAM+D,EAAgB,GACtB,GAAmB,IAAhB/D,EAAKC,QAAgBD,EAAKC,QAAS,EAAE,CACpC,IAAI,IAAI+D,EAAE,EAAEA,EAAE,EAAEA,IACZD,EAAczD,KAAK,CAAC,WAAcN,EAAKgE,GAAGC,cACtB,YAAejE,EAAKgE,GAAGE,eACvB,QAAWlE,EAAKgE,GAAGG,aAE3C,EAAKzD,SAAS,CAACC,WAAY,EAAKtB,MAAMK,SAASC,GAAIyE,YAAaL,SAEhE,EAAKrD,SAAS,CAACC,WAAY,EAAKtB,MAAMK,SAASC,GAAIyE,YAAa,SAnBxE,EAAKxD,MAAO,CACRD,WAAY,GACZyD,YAAa,IAJF,E,sEA0BV,IAAD,OACyB,KAA1BvD,KAAKxB,MAAMsB,YAAqBE,KAAKD,MAAMD,aAAeE,KAAKxB,MAAMK,SAASC,IAAIkB,KAAKiD,mBAC1F,IAAMO,EAAexD,KAAKD,MAAMwD,YAAYlB,KAAI,SAAAC,GAAM,OAAI,kBAAC,EAAD,CAA6BC,IAAKD,EAAOM,QAASC,WAAYP,EAAOO,WAAYC,YAAaR,EAAOQ,YAAaF,QAASN,EAAOM,QAASxC,MAAO,EAAK5B,MAAM4B,MAAOuC,WAAY,EAAKnE,MAAMmE,gBAErP,OACI,kBAAC,IAAM1C,SAAP,KACmC,IAAlCD,KAAKD,MAAMwD,YAAYnE,OACpB,yBAAKc,UAAU,4CACVsD,GAEP,Q,GArCsB1C,c,OCKrB2C,G,kBANoB,SAACjF,GAChC,OACI,yBAAK2B,IAAG,kDAA6C3B,EAAM4B,MAAnD,qBAAqE5B,EAAMM,GAA3E,QAAqFwB,IAAI,WAAWJ,UAAU,4BCe/GwD,G,MAhBkB,SAAClF,GAE9B,IAKMmF,EAJe,CAACnF,EAAMoF,SAASC,MAAMrF,EAAMoF,SAASE,MAAMtF,EAAMoF,SAASG,MAAMvF,EAAMoF,SAASI,MAAMxF,EAAMoF,SAASK,MAAMzF,EAAMoF,SAASM,MAAM1F,EAAMoF,SAASO,OAIrIC,QAAO,SAAA9B,GAAM,OAAe,IAAXA,KAAcD,KAAI,SAAC9C,EAAI8E,GAAL,OAAe,kBAAC,EAAD,CAA4B9B,IAAK8B,EAAOjE,MAAO5B,EAAM4B,MAAOtB,GAAIS,OAChJ,OAEI,yBAAKW,UAAU,aACVyD,KC2CEW,EAtDqB,SAAC9F,GAGjC,IAsBM+F,EAdkB,WACpB,GAAgC,IAA7B/F,EAAMgG,YAAYpF,OAAc,CAC/B,IAAMmF,EAAO/F,EAAMgG,YAAY,GAAGC,SAASF,KACrCG,EAAOlG,EAAMgG,YAAY,GAAGC,SAASC,KAC3C,MAAY,SAATA,GAA4B,QAATA,GAA2B,SAATA,EACxB,WAATH,EAA0B,QACjBA,EAGLG,EAAK9D,MAAM,EAAE8D,EAAKtF,SAKxBuF,GACb,OACI,yBAAKzE,UAAU,4CACX,yBAAKC,IAAG,kDAA6C3B,EAAM4B,MAAnD,yBAzBQ,WACpB,IAAIsC,EAAY,GAIhB,OAHAlE,EAAMmE,WAAWrD,SAAQ,SAAAgD,GAClBA,EAAOC,MAAQ/D,EAAMoG,WAAUlC,EAAUJ,EAAO7B,SAEhDiC,EAoB8EmC,GAAzE,QAAkGvE,IAAI,eAAeJ,UAAU,yBACtH,MAAhB1B,EAAMwC,MACP,yBAAKd,UAAU,4BACX,yBAAKC,IAAc,SAAToE,EAAA,gDAA6DA,EAA7D,QAAyEjE,IAAI,WAAWJ,UAAU,wBAC5G,wBAAIA,UAAU,oBAA6B,SAATqE,EAAkB,MAAQA,IAE9D,IACF,yBAAKrE,UAAU,sBACX,yBAAKA,UAAU,0BAA0BC,IAAG,0BAAqB3B,EAAMgG,YAAY,GAAGM,SAA1C,QAA0DxE,IAAI,cAC1G,yBAAKJ,UAAU,0BAA0BC,IAAG,0BAAqB3B,EAAMgG,YAAY,GAAGO,SAA1C,QAA0DzE,IAAI,eAE9G,yBAAKJ,UAAU,qBACX,yBAAKC,IAAG,4DAAuD3B,EAAMgG,YAAY,GAAGQ,MAAMC,MAAlF,QAA+F3E,IAAI,aAAaJ,UAAU,2BAClI,yBAAKC,IAAG,iEAA4D3B,EAAMgG,YAAY,GAAGQ,MAAME,aAAvF,QAA2G5E,IAAI,aAAaJ,UAAU,4BAElJ,uBAAGA,UAAU,qBAAb,UAAqC1B,EAAMgG,YAAY,GAAGQ,MAAMG,MAAhE,cAA2E3G,EAAMgG,YAAY,GAAGQ,MAAMI,OAAtG,cAAkH5G,EAAMgG,YAAY,GAAGQ,MAAMK,UAC7I,uBAAGnF,UAAU,sBAAqB,0BAAMA,UAAU,4BAA4B1B,EAAMgG,YAAY,GAAGQ,MAAMM,YAAzG,WAAuI,0BAAMpF,UAAU,4BAA4B1B,EAAMgG,YAAY,GAAGQ,MAAMO,oBAA9M,OACA,uBAAGrF,UAAU,wBAAb,UAA2C,6BAAK,0BAAMA,UAAU,8BAA8B1B,EAAMgG,YAAY,GAAGQ,MAAMQ,8BACzH,uBAAGtF,UAAU,qBAAb,iBAA+C,0BAAMA,UAAU,2BAA2B1B,EAAMgG,YAAY,GAAGQ,MAAMS,cACrH,yBAAKvF,UAAU,wBACV,kBAAC,EAAD,CAA0BE,MAAO5B,EAAM4B,MAAOwD,SAAUpF,EAAMgG,YAAY,GAAGQ,WCjB/EU,G,MAhCmB,SAAClH,GAE/B,OACI,oCACI,wBAAI0B,UAAU,mBAAd,eAAmE,MAA1B1B,EAAMmH,SAASC,OAAiB,MAAQ,QACjF,uBAAG1F,UAAU,qBAA4C,QAAvB1B,EAAMmH,SAASE,IAAgB,MAAQ,QACzE,yBAAK3F,UAAU,gDACX,yBAAKA,UAAU,4BACX,yBAAKC,IAAI,qCAAqCG,IAAI,YAAYJ,UAAU,8BACxE,0BAAMA,UAAU,8BAA8B1B,EAAMmH,SAASG,iBAEjE,yBAAK5F,UAAU,4BACX,yBAAKC,IAAI,iCAAiCG,IAAI,aAAaJ,UAAU,8BACrE,0BAAMA,UAAU,8BAA8B1B,EAAMmH,SAASI,aAEjE,yBAAK7F,UAAU,4BACX,yBAAKC,IAAI,kCAAkCG,IAAI,cAAcJ,UAAU,8BACvE,0BAAMA,UAAU,8BAA8B1B,EAAMmH,SAASK,cAEjE,yBAAK9F,UAAU,4BACX,yBAAKC,IAAI,gCAAgCG,IAAI,YAAYJ,UAAU,8BACnE,0BAAMA,UAAU,8BAA8B1B,EAAMmH,SAASM,aAEjE,yBAAK/F,UAAU,4BACX,yBAAKC,IAAI,iCAAiCG,IAAI,aAAaJ,UAAU,8BACrE,0BAAMA,UAAU,8BAA8B1B,EAAMmH,SAASO,sBCOlEC,G,MA/BuB,SAAC3H,GAWnC,OACI,yBAAK0B,UAAU,wBACX,yBAAKC,IAAG,kDAA6C3B,EAAM4B,MAAnD,yBAXC,WACb,IAAIK,EAAO,GAKX,OAJAjC,EAAMmE,WAAWrD,SAAQ,SAAAgD,GAClBA,EAAOC,MAAQ/D,EAAM4H,WAAW9C,aAC/B7C,EAAK6B,EAAO7B,SAEbA,EAK8EiC,GAAzE,QAA4FpC,IAAI,eAAeJ,UAAU,uBACjI,uBAAGA,UAAU,sBAAsB1B,EAAM4H,WAAWpB,MAAMnC,YAC1D,yBAAK3C,UAAU,oBACX,yBAAKA,UAAU,wBAAwBC,IAAG,0BAAqB3B,EAAM4H,WAAWtB,SAAtC,QAAsDxE,IAAI,cACpG,yBAAKJ,UAAU,wBAAwBC,IAAG,0BAAqB3B,EAAM4H,WAAWrB,SAAtC,QAAsDzE,IAAI,eAExG,wBAAIJ,UAAU,wBAAwB1B,EAAM4H,WAAWC,MACvD,uBAAGnG,UAAU,yBAAb,UAAyC1B,EAAM4H,WAAWpB,MAAMG,MAAhE,cAA2E3G,EAAM4H,WAAWpB,MAAMI,OAAlG,cAA8G5G,EAAM4H,WAAWpB,MAAMK,UACrI,uBAAGnF,UAAU,oBAAmB,0BAAMA,UAAU,0BAA0B1B,EAAM4H,WAAWpB,MAAMM,YAAjG,WAA+H,0BAAMpF,UAAU,0BAA0B1B,EAAM4H,WAAWpB,MAAMO,oBAAhM,OACA,uBAAGrF,UAAU,sBAAb,UAAyC,6BAAK,0BAAMA,UAAU,4BAA4B1B,EAAM4H,WAAWpB,MAAMQ,8BACjH,uBAAGtF,UAAU,mBAAb,iBAA6C,0BAAMA,UAAU,yBAAyB1B,EAAM4H,WAAWpB,MAAMS,cAC7G,yBAAKvF,UAAU,sBACX,kBAAC,EAAD,CAA0BE,MAAO5B,EAAM4B,MAAOwD,SAAUpF,EAAM4H,WAAWpB,YCH1EsB,EAvBmB,SAAC9H,GAE/B,IAYM+H,EAZuB,WACzB,IAAMC,EAAS,GAOf,OANAhI,EAAMmH,SAASrG,SAAQ,SAACC,EAAI8E,GACrBA,GAAS,GACRmC,EAAO/G,KAAK,CAAC,WAAcF,EAAI+D,WAAY,cAAiB/D,EAAIkH,cAAe,KAAQjI,EAAMmH,SAAS,GAAGtB,GAAOqC,SACnG,SAAYnH,EAAIuF,SAAU,SAAYvF,EAAIwF,SAAU,OAAUxF,EAAIqG,OAAQ,MAASrG,EAAIyF,WAGrGwB,EAGQG,GACatE,KAAI,SAAA9C,GAAG,OAAI,kBAAC,EAAD,CAA+BgD,IAAKhD,EAAI+D,WAAYlD,MAAO5B,EAAM4B,MAAOgG,WAAY7G,EAAKoD,WAAYnE,EAAMmE,gBAEtJ,OACI,oCACK4D,ICkKEK,E,YA9KX,WAAYpI,GAAO,IAAD,8BACd,4CAAMA,KAWVqI,cAAgB,WACZnI,MAAM,GAAD,OAAI,EAAKF,MAAMG,KAAf,mBAA8B,EAAKH,MAAMI,OAAzC,mDAA0F,EAAKJ,MAAMsI,QAArG,oBAAwH,EAAKtI,MAAMO,SACnIC,MAAK,SAAA+H,GAAQ,OAAIA,EAAS7H,UAC1BF,MAAK,SAAAG,GACF,IAAM6H,EAAW,GAGjB,OAFAC,OAAOC,QAAQ/H,GAAMG,SAAQ,mCAAEiD,EAAF,KAAM4E,EAAN,YAAiBH,EAASvH,KAAK,CAAC,KAAQ8C,EAAI,MAAS4E,OAClF,EAAKtH,SAAS,CAACiH,QAAS,EAAKtI,MAAMsI,QAASE,SAAUA,IAC/CA,KAEVhI,MAAK,SAAAgI,GACF,IAAMI,EAAU,GACVC,EAAU,GAChBL,EAAS,IAAIG,MAAM7H,SAAQ,SAAAgD,GACF,MAAlBA,EAAOsD,OACNwB,EAAQ3H,KAAK,CAAC,WAAc6C,EAAOgB,WACvB,cAAiBhB,EAAOmE,cACxB,SAAYnE,EAAOwC,SACnB,SAAYxC,EAAOyC,SACnB,MAASzC,EAAO0C,MAChB,OAAU1C,EAAOsD,OACjB,KAAQtD,EAAOmC,SAASF,KACxB,KAAQjC,EAAOmC,SAASC,OACX,MAAlBpC,EAAOsD,QACdyB,EAAQ5H,KAAK,CAAC,WAAc6C,EAAOgB,WACvB,cAAiBhB,EAAOmE,cACxB,SAAYnE,EAAOwC,SACnB,SAAYxC,EAAOyC,SACnB,MAASzC,EAAO0C,MAChB,OAAU1C,EAAOsD,OACjB,KAAQtD,EAAOmC,SAASF,KACxB,KAAQjC,EAAOmC,SAASC,UAG5C,IAAM4C,EAAsB,GACtBC,EAAsB,GAE5BP,EAAS,IAAIG,MAAM7H,SAAQ,SAACC,EAAI8E,GAEzBA,EAAM,GAAK,EACV+C,EAAQ9H,SAAQ,SAAAgD,GAETA,EAAOmE,gBAAkBlH,EAAIkH,eAC5Ba,EAAoB7H,KAAK,CAAC,SAAYF,EAAIiH,OAAOjF,aAAc,YAAehC,EAAIiH,OAAOgB,iBAK7FH,EAAQ/H,SAAQ,SAAAgD,GACTA,EAAOmE,gBAAkBlH,EAAIkH,eAC5Bc,EAAoB9H,KAAK,CAAC,SAAYF,EAAIiH,OAAOjF,aAAc,YAAehC,EAAIiH,OAAOgB,oBAK7GJ,EAAQ3H,KAAK6H,GACbD,EAAQ5H,KAAK8H,GAEb,EAAK1H,SAAS,CAAC4H,YAAaL,EAAQM,YAAaL,QArE3C,EA6ElBM,aAAe,SAACC,GACZ,OAAe,MAAZA,EAAyB,aACR,MAAZA,EAAyB,kBACb,MAAZA,EAAwB,aACZ,MAAZA,EAAwB,cACZ,MAAZA,EAAwB,OACpB,SAnFE,EAuFjBC,gBAAkB,SAACC,GAChB,IAAMC,EAAM,SAAUC,EAAKC,GACvB,OAAQ,MAAQD,GAAKpH,OAAc,EAARqH,IAEzBC,EAAOC,WAAWL,GAAY3G,QAAQ,GACtCiH,EAAQC,KAAKC,MAAMJ,EAAO,GAAK,IAC/BK,EAAUF,KAAKC,MAAMJ,EAAO,IAAM,GACxC,OAAc,IAAVE,EACOL,EAAIK,EAAO,GAAK,UAAYL,EAAIQ,EAAS,GAAK,YAE9CR,EAAIQ,EAAS,GAAK,aAjGf,EAsGlBC,oBAAsB,WAClB,IAAI1I,EAAa,GACb8F,EAAS,GACPpB,EAAc,GACdiE,EAAe,GACfC,EAAe,GACjB7C,EAAM,GAoBV,OAnBkC,IAA/B,EAAK9F,MAAMiH,SAAS5H,SACnB,EAAKW,MAAMiH,SAAS,IAAIG,MAAM7H,SAAQ,SAAAC,GAC/BA,EAAIiH,OAAOjF,eAAiB,EAAK/C,MAAM6H,OACtCvG,EAAaP,EAAIkH,kBAGzB,EAAK1G,MAAMiH,SAAS,IAAIG,MAAM7H,SAAQ,SAAAgD,GAC/BA,EAAOmE,gBAAkB3G,IACxB8F,EAAStD,EAAOsD,OAChBpB,EAAY/E,KAAK6C,OAGzB,EAAKvC,MAAMiH,SAAS,IAAIG,MAAM7H,SAAQ,SAAAqJ,GAC/B/C,IAAW+C,EAAG/C,SAAQC,EAAM8C,EAAG9C,KACjB,MAAd8C,EAAG/C,OAAgB6C,EAAahJ,KAAKkJ,GACjB,MAAdA,EAAG/C,QAAgB8C,EAAajJ,KAAKkJ,OAI/C,CAAC9C,MAAIrB,cAAYiE,eAAaC,iBAhIvB,EAmIlBE,YAAa,WACT,IAAMC,EAAe,EAAK9I,MAAM+I,OAChC,EAAKjJ,SAAS,CAAEiJ,QAASD,KAnIzB,EAAK9I,MAAM,CACP+G,QAAS,GACTE,SAAU,GACVS,YAAa,GACbC,YAAa,GACboB,QAAQ,GAPE,E,sEAyIY,KAAvB9I,KAAKxB,MAAMsI,SAAkB9G,KAAKD,MAAM+G,UAAY9G,KAAKxB,MAAMsI,SAAS9G,KAAK6G,gBAD5E,MAEsB7G,KAAKwI,sBAAxB3C,EAFH,EAEGA,IAAIrB,EAFP,EAEOA,YACX,OACI,kBAAC,IAAMvE,SAAP,KACoC,IAA/BD,KAAKD,MAAMiH,SAAS5H,QAAuC,IAAvBoF,EAAYpF,OAC7C,yBAAKc,UAAS,yDAA4D,QAAR2F,EAAgB,yBAA2B,4BACzG,wBAAI3F,UAAU,4BAAd,UAA6CF,KAAK2H,aAAa3H,KAAKD,MAAMiH,SAAS,GAAGG,OAAtF,cAAuG,0BAAMjH,UAAU,sCAAhB,WAA0DF,KAAK6H,gBAAgB7H,KAAKD,MAAMiH,SAAS,GAAGG,UAC5M,kBAAC,EAAD,CAA6B/G,MAAOJ,KAAKxB,MAAM4B,MAAOuC,WAAY3C,KAAKxB,MAAMmE,WAAYiC,SAAU5E,KAAKxB,MAAMoG,SAAUJ,YAAaA,EAAaxD,MAAOhB,KAAKD,MAAMiH,SAAS,GAAGG,QACjL,4BAAQjH,UAAS,eAA+B,IAAtBF,KAAKD,MAAM+I,OAAmB,2BAA6B,yBAApE,8BAA0HC,QAAS/I,KAAK4I,eAClI,IAAtB5I,KAAKD,MAAM+I,OACZ,yBAAK5I,UAAU,sCACX,yBAAKA,UAAS,4BAAgE,QAAzCF,KAAKD,MAAMiH,SAAS,IAAIG,MAAM,GAAGtB,IAAgB,yBAA2B,4BAC7G,yBAAK3F,UAAU,mBACX,kBAAC,EAAD,CAA2ByF,SAAU3F,KAAKD,MAAMiH,SAAS,IAAIG,MAAM,MAEvE,yBAAKjH,UAAU,4BACX,kBAAC,EAAD,CAA2BE,MAAOJ,KAAKxB,MAAM4B,MAAOuF,SAAU3F,KAAKD,MAAM0H,YAAa9E,WAAY3C,KAAKxB,MAAMmE,eAGrH,yBAAKzC,UAAS,4BAAgE,QAAzCF,KAAKD,MAAMiH,SAAS,IAAIG,MAAM,GAAGtB,IAAgB,yBAA2B,4BAC7G,yBAAK3F,UAAU,mBACX,kBAAC,EAAD,CAA2ByF,SAAU3F,KAAKD,MAAMiH,SAAS,IAAIG,MAAM,MAEvE,yBAAKjH,UAAU,4BACX,kBAAC,EAAD,CAA2BE,MAAOJ,KAAKxB,MAAM4B,MAAOuF,SAAU3F,KAAKD,MAAM2H,YAAa/E,WAAY3C,KAAKxB,MAAMmE,gBAIvH,IAER,Q,GAxKuB7B,aCsC1BkI,G,kBAxCX,WAAYxK,GAAQ,IAAD,8BACf,4CAAMA,KAOVyK,sBAAwB,WACpBvK,MAAM,GAAD,OAAI,EAAKF,MAAMG,KAAf,mBAA8B,EAAKH,MAAMI,OAAzC,iEAAwG,EAAKJ,MAAMK,SAASqK,UAA5H,oBAAiJ,EAAK1K,MAAMO,SAC5JC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAG,GAEF,QAAoB6C,IAAjB7C,EAAKgK,QAAsB,CAC9B,IAAMC,EAAU,GAChBjK,EAAKgK,QAAQ7J,SAAQ,SAAC+J,EAAWhF,GAC1BA,GAAS,GAAG+E,EAAQ3J,KAAK4J,MAEhC,EAAKxJ,SAAS,CAACC,WAAY,EAAKtB,MAAMK,SAASC,GAAIwK,YAAaF,SAE5D,EAAKvJ,SAAS,CAACC,WAAY,EAAKtB,MAAMK,SAASC,GAAIwK,YAAa,SAlB5E,EAAKvJ,MAAQ,CACTD,WAAY,GACZwJ,YAAa,IAJF,E,sEAyBV,IAAD,OAC0B,KAA3BtJ,KAAKxB,MAAMK,SAASC,IAAakB,KAAKD,MAAMD,aAAeE,KAAKxB,MAAMK,SAASC,IAAIkB,KAAKiJ,wBAC3F,IAAMI,EAAarJ,KAAKD,MAAMuJ,YAAYjH,KAAI,SAACC,EAAO+B,GAAR,OAAkB,kBAAC,EAAD,CAA4B9B,IAAKD,EAAOiH,OAAQzC,QAASxE,EAAOiH,OAAQ3E,SAAUtC,EAAOsC,SAAWxE,MAAO,EAAK5B,MAAM4B,MAAOzB,KAAM,EAAKH,MAAMG,KAAMC,OAAQ,EAAKJ,MAAMI,OAAQG,OAAQ,EAAKP,MAAMO,OAAQ4D,WAAY,EAAKnE,MAAMmE,WAAY0D,KAAM,EAAK7H,MAAMK,SAAS4B,KAAM+I,KAAM,EAAKhL,MAAMK,SAASwB,mBACvW,OACI,kBAAC,IAAMJ,SAAP,KACuC,IAAlCD,KAAKD,MAAMuJ,YAAYlK,OACxB,yBAAKc,UAAU,2CACVmJ,GAEH,Q,GAnCiBvI,cCcpB2I,EAXM,SAACjL,GAClB,OACI,6BAAS0B,UAAU,gBAChB,kBAAC,EAAD,CAAcnB,OAAQP,EAAMO,OAAQJ,KAAMH,EAAMG,KAAMyB,MAAO5B,EAAM4B,MAAOxB,OAAQJ,EAAMI,OAAQ8K,MAAOlL,EAAMkL,MAAO7K,SAAUL,EAAMmL,WACpI,kBAAC,EAAD,CAAqB5K,OAAQP,EAAMO,OAAQJ,KAAMH,EAAMG,KAAMyB,MAAO5B,EAAM4B,MAAOxB,OAAQJ,EAAMI,OAAQC,SAAUL,EAAMmL,WACvH,kBAAC,EAAD,CAAwB5K,OAAQP,EAAMO,OAAQJ,KAAMH,EAAMG,KAAMyB,MAAO5B,EAAM4B,MAAOxB,OAAQJ,EAAMI,OAAQC,SAAUL,EAAMmL,SAAUhH,WAAYnE,EAAMmE,aACtJ,kBAAC,EAAD,CAAsB5D,OAAQP,EAAMO,OAAQJ,KAAMH,EAAMG,KAAMyB,MAAO5B,EAAM4B,MAAOxB,OAAQJ,EAAMI,OAAQ8K,MAAOlL,EAAMkL,MAAO7K,SAAUL,EAAMmL,SAAUhH,WAAYnE,EAAMmE,eCoJpKiH,E,YA7Jb,WAAYpL,GAAQ,IAAD,8BACjB,4CAAMA,KA4CRqL,aAAe,SAAAC,GACb,EAAKjK,SAAS,CACZ6G,SAAUoD,EAAMC,OAAO5C,SA/CR,EAmDnB6C,mBAAqB,SAAAF,GACnB,EAAKjK,SAAS,CAAEjB,OAAQkL,EAAMC,OAAO5C,SApDpB,EAuDnByB,YAAc,WACZ,IAAMqB,EAAiBC,SAASC,cAAc,gBAAgBhD,MAEjC,IAA1B8C,EAAe7K,OAClBV,MAAM,GAAD,OACA,EAAKC,KADL,mBACoB,EAAKoB,MAAMnB,OAD/B,gEAC6FqL,EAD7F,oBACuH,EAAKlL,SAE9HC,MAAK,SAAAC,GACJ,GAAoB,MAAhBA,EAAKyC,OAAgB,OAAOzC,EAAKC,OAChC,GAAoB,MAAhBD,EAAKyC,OAEZ,MADA,EAAK7B,SAAS,CAAE6B,OAAQzC,EAAKyC,OAAQ0I,WAAY,gBAC3C,IAAIC,MAAM,eACX,GAAoB,MAAhBpL,EAAKyC,OAEd,MADA,EAAK7B,SAAS,CAAE6B,OAAQzC,EAAKyC,OAAQ0I,WAAY,iBAC3C,IAAIC,MAAM,gBACX,GAAoB,MAAhBpL,EAAKyC,OAEd,MADA,EAAK7B,SAAS,CAAE6B,OAAQzC,EAAKyC,OAAQ0I,WAAY,oBAC3C,IAAIC,MAAM,mBACX,GAAoB,MAAhBpL,EAAKyC,OAKd,MAJA,EAAK7B,SAAS,CACZ6B,OAAQzC,EAAKyC,OACb0I,WAAY,gCAER,IAAIC,MAAM,kCAGnBrL,MAAK,SAAAG,GACJ,EAAKU,SAAS,CACZ6B,OAAQ,IACR0I,WAAY,KACZE,aAAcnL,OAGjByC,OAAM,SAAA2I,GAAK,OAAIzI,QAAQC,IAAIwI,MAE5B,EAAK1K,SAAS,CAAE6B,OAAQ,EAAG0I,WAAY,8BA1FxB,EA8FnBI,eAAiB,SAAAV,GACf,GAAkB,UAAdA,EAAMvH,IAAiB,OAAO,EAAKqG,eA7FvC,EAAK7I,MAAQ,CACX2G,SAAU,GACV9H,OAAQ,OACR8C,OAAQ,IACR0I,WAAY,GACZK,aAAc,GACdC,aAAc,GACdJ,aAAc,GACd3H,WAAY,IAEd,EAAK5D,OAAS,6CACd,EAAKJ,KAAO,uCAbK,E,iFAgBE,IAAD,OAClBD,MAAM,yDACHM,MAAK,SAAA+H,GAAQ,OAAIA,EAAS7H,UAC1BF,MAAK,SAAAG,GAAI,OACRT,MAAM,2CAAD,OACwCS,EAAK,GAD7C,oCAINH,MAAK,SAAA2L,GAAS,OAAIA,EAAUzL,UAC5BF,MAAK,SAAA4L,GACJ,IAAMlB,EAAQzC,OAAO4D,OAAOD,EAAMzL,MAKlC,OAJA,EAAKU,SAAS,CACZ4K,aAAcG,EAAME,QACpBJ,aAAchB,IAEThL,MAAM,2CAAD,OACiCkM,EAAME,QADvC,iCAIb9L,MAAK,SAAA+L,GAAS,OAAIA,EAAU7L,UAC5BF,MAAK,SAAAgM,GACJ,IAAMrI,EAAa,GACnBsE,OAAO4D,OAAOG,EAAM7L,MAAMG,SAAQ,SAAAgD,GAChCK,EAAWlD,KAAK,CAAE8C,IAAK0I,SAAS3I,EAAOC,KAAM9B,KAAM6B,EAAOxD,QAE5D,EAAKe,SAAS,CAAE8C,WAAYA,S,+BA0DhC,OACE,kBAAC,IAAM1C,SAAP,KACE,yBAAKC,UAAU,QACb,wBAAIA,UAAU,eAAd,2BACA,wBAAIA,UAAU,qBAAd,uDACsD,6BADtD,gCAIA,yBAAKA,UAAU,mBACb,4BACEA,UAAU,eACViH,MAAOnH,KAAKD,MAAMnB,OAClBsM,SAAUlL,KAAKgK,oBAEf,4BAAQ7C,MAAM,OAAOgE,cAAY,GAAjC,wBAGA,4BAAQhE,MAAM,QAAd,eACA,4BAAQA,MAAM,MAAd,SACA,4BAAQA,MAAM,OAAd,SACA,4BAAQA,MAAM,OAAd,iBACA,4BAAQA,MAAM,OAAd,WACA,4BAAQA,MAAM,OAAd,UACA,4BAAQA,MAAM,MAAd,UACA,4BAAQA,MAAM,OAAd,WAEF,2BACEjH,UAAU,cACVkL,KAAK,OACLC,YAAY,aACZlE,MAAOnH,KAAKD,MAAM2G,SAClBwE,SAAUlL,KAAK6J,aACfyB,WAAYtL,KAAKwK,iBAEnB,4BAAQzB,QAAS/I,KAAK4I,YAAa1I,UAAU,gBAA7C,MACK,qCAIc,MAAtBF,KAAKD,MAAM2B,OACV,uBAAGxB,UAAU,oBAAoBF,KAAKD,MAAMqK,YAE5C,kBAAC,EAAD,CACErL,OAAQiB,KAAKjB,OACbJ,KAAMqB,KAAKrB,KACX0H,KAAMrG,KAAKD,MAAM2G,SACjBtG,MAAOJ,KAAKD,MAAM0K,aAClB7L,OAAQoB,KAAKD,MAAMnB,OACnB8K,MAAO1J,KAAKD,MAAM2K,aAClBf,SAAU3J,KAAKD,MAAMuK,aACrB3H,WAAY3C,KAAKD,MAAM4C,kB,GAtJjB7B,aCClByK,IAASC,OAAO,kBAAC,EAAD,MAAStB,SAASuB,eAAe,W","file":"static/js/main.f6217da3.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport '../../sass/SummonerIcon.sass'\r\n\r\nclass SummonerIcon extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            summonerId: \"\",\r\n            rank: []\r\n        }\r\n    }\r\n  \r\n    fetchSummonerData = () => {\r\n            fetch(`${this.props.cors}https://${this.props.region}.api.riotgames.com/lol/league/v4/entries/by-summoner/${this.props.summoner.id}?api_key=${this.props.apiKey}`)\r\n            .then(resp => resp.json())\r\n            .then(data => {\r\n                if(data.length !== 0){\r\n                    const soloRank = [];\r\n                    data.forEach(ele => {\r\n                        if(ele.queueType === \"RANKED_SOLO_5x5\"){\r\n                            soloRank.push({\"tier\": ele.tier, \"rank\": ele.rank, \"points\": ele.leaguePoints})\r\n                        } \r\n                    })\r\n                    this.setState({rank: soloRank, summonerId: this.props.summoner.id})\r\n                } else {\r\n                    const soloRank = [{\"tier\": \"UNRANKED\", \"rank\": \"\", \"points\": \"\"}]\r\n                    this.setState({rank: soloRank, summonerId: this.props.summoner.id})\r\n                }\r\n\r\n\r\n            })      \r\n        }\r\n\r\n    componentDidMount(){\r\n        this.fetchSummonerData();\r\n    }\r\n    \r\n    render(){\r\n        if(this.state.summonerId !== \"\" && this.state.summonerId !== this.props.summoner.id){\r\n            this.fetchSummonerData();\r\n        }\r\n\r\n        return ( \r\n            <React.Fragment>\r\n            {this.state.rank.length !== 0 ? \r\n            <div className=\"summonerData__item summonerIcon\">\r\n                <div className=\"summonerIcon__iconContainer\">\r\n                    <img src={`https://ddragon.leagueoflegends.com/cdn/${this.props.patch}/img/profileicon/${this.props.summoner.profileIconId}.png`} \r\n                    alt=\"Summoner icon\"\r\n                    className=\"summonerIcon__iconImage\"/>\r\n                    {this.state.rank[0].tier !== \"UNRANKED\" ? \r\n                    <img src={this.state.rank[0].tier.toLowerCase() === 'grandmaster' ? './images/rank_borders/master.png' : `./images/rank_borders/${this.state.rank[0].tier.toLowerCase()}.png`} \r\n                    alt=\"Rank border\"\r\n                    className=\"summonerIcon__borderImage\"/> : \"\"}\r\n                    <p className=\"summonerIcon__level\">{this.props.summoner.summonerLevel}</p>\r\n                </div>\r\n                <div className=\"summonerIcon__statsContainer\">\r\n                    <h3 className=\"summonerIcon__nickname\">{this.props.summoner.name}</h3>\r\n                    <img src={`./images/emblems/Emblem_${this.state.rank[0].tier}.png`} alt=\"Summoner rank\" className=\"summonerIcon__rankImage\"/>\r\n                    <p className=\"summonerIcon__stats\">\r\n                        <span className=\"summonerLevel__stats--bold\">{this.state.rank[0].tier.toLowerCase().charAt(0).toUpperCase() + this.state.rank[0].tier.toLowerCase().slice(1) + \"  \"}</span> \r\n                        <span className=\"summonerLevel__stats--bold\">{this.state.rank[0].rank + \" | \"}</span>\r\n                        {this.state.rank[0].points + \" LP\"}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            : \"\"}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n \r\nexport default SummonerIcon;","import React from 'react';\r\nimport '../../sass/SummonerRankedStatsSingle.sass';\r\n\r\nconst SummonerRankedStatsSingle = (props) => {\r\n    const {queueType, tier, rank, points, wins, losses} = props.rank\r\n\r\n    const handleQueueType = (queue) => {\r\n        if(queue === \"RANKED_SOLO_5x5\") return \"Ranked Solo\"\r\n        else if (queue === \"RANKED_FLEX_SR\") return \"Ranked Flex\"\r\n    }\r\n\r\n\r\n    return ( \r\n        <div className=\"summonerRankedStats__singleItem singleItem\">\r\n            <img src={`./images/emblems/Emblem_${tier}.png`} alt=\"Ranked emblem\" className=\"singleItem__rankEmblem\"/>\r\n            <div className=\"singleItem__container\">\r\n                <p className=\"singleItem__queueType\">{handleQueueType(queueType)}</p>\r\n                <h3 className=\"singleItem__tierRank\">{tier.charAt(0) + tier.toLowerCase().slice(1) + ` ${rank}`}</h3>\r\n                <p className=\"singleItem__points\">{points + \" LP\"}</p>\r\n                <p className=\"singleItem__score\">{`${wins}W ${losses}L (${(wins/(wins + losses)).toFixed(1)*100})%`}</p>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default SummonerRankedStatsSingle;","import React,{Component} from 'react';\r\n\r\nclass SummonerRankedStatsTTF extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            summonerId: \"\",\r\n            ttfData: []\r\n        }\r\n    }\r\n\r\n    fetchRankedStats = () => {\r\n        const ttfData = [];\r\n        //Waiting for APP api Key \r\n        fetch(`${this.props.cors}https://${this.props.region}.api.riotgames.com/tft/summoner/v1/summoners/by-name/${this.props.summonerName}?api_key=${this.props.apiKey}`)\r\n        .then(resp0 => resp0.json())\r\n        .then(data0 => {\r\n            if(data0.status.status_code !== 403) fetch(`${this.props.cors}https://${this.props.region}.api.riotgames.com/tft/league/v1/entries/by-summoner/${data0.id}?api_key=${this.props.apiKey}`)\r\n            \r\n            }\r\n        )\r\n        .catch(err => console.log(err))\r\n        .then(resp => resp !== undefined ? resp.json() : [])\r\n        .then(data => {\r\n            \r\n            if(data.length !== 0){\r\n                ttfData.push({\"tier\": data[0].tier,\"rank\": data[0].rank, \"points\": data[0].leaguePoints,\"wins\": data[0].wins})\r\n                this.setState({summonerId: this.props.summonerId, ttfData: ttfData})\r\n            } else if (data.length === 0){\r\n                ttfData.push({\"tier\": \"UNRANKED\",\"rank\": \"\", \"points\": 0,\"wins\": 0})\r\n                this.setState({summonerId: this.props.summonerId, ttfData: ttfData})\r\n            }\r\n        })\r\n        \r\n    }\r\n\r\n    render(){\r\n        if(this.props.summonerId !== \"\" && this.state.summonerId !== this.props.summonerId) this.fetchRankedStats();\r\n        return (  \r\n            <>\r\n            {this.state.ttfData.length !== 0 ?\r\n                 <div className=\"summonerRankedStats__singleItem singleItem singleItem--last\">\r\n                 <img src={`./images/emblems/Emblem_${this.state.ttfData[0].tier}.png`} alt=\"Ranked emblem\" className=\"singleItem__rankEmblem\"/>\r\n                 <div className=\"singleItem__container\">\r\n                     <p className=\"singleItem__queueType\">Ranked TTF</p>\r\n                     <h3 className=\"singleItem__tierRank\">{this.state.ttfData[0].tier.charAt(0) + this.state.ttfData[0].tier.toLowerCase().slice(1) + ` ${this.state.ttfData[0].rank}`}</h3>\r\n                     <p className=\"singleItem__points\">{this.state.ttfData[0].points + \" LP\"}</p>\r\n                     <p className=\"singleItem__win\">{this.state.ttfData[0].wins} wins</p>\r\n                 </div>\r\n             </div>\r\n            : \"\"}\r\n            </>\r\n        );\r\n    }\r\n}\r\n \r\nexport default SummonerRankedStatsTTF;","import React, { Component } from 'react';\r\nimport '../../sass/SummonerRankedStats.sass'\r\nimport SummonerRankedStatsSingle from './SummonerRankedStatsSingle.js'\r\nimport SummonerRankedStatsTTF from './SummonerRankedStatsTTF.js'\r\nclass SummonerRankedStats extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            summonerId: \"\",\r\n            rankedStats: [],\r\n            summonerName: \"\"\r\n        }\r\n    }\r\n\r\n    fetchRankedStats = () => {\r\n        fetch(`${this.props.cors}https://${this.props.region}.api.riotgames.com/lol/league/v4/entries/by-summoner/${this.props.summoner.id}?api_key=${this.props.apiKey}`)\r\n            .then(resp => resp.json())\r\n            .then(data => {\r\n                const soloRank = [];\r\n                data.forEach(ele => \r\n                    soloRank.push({\"id\": ele.leagueId,\r\n                                   \"queueType\": ele.queueType, \r\n                                   \"tier\": ele.tier, \r\n                                   \"rank\": ele.rank, \r\n                                   \"points\" : ele.leaguePoints,\r\n                                   \"wins\": ele.wins,\r\n                                   \"losses\": ele.losses})\r\n                )\r\n                this.setState({rankedStats: soloRank, summonerId: this.props.summoner.id, summonerName: this.props.summoner.name})\r\n            })      \r\n    }\r\n\r\n    render(){\r\n        if(this.props.summoner.id !== \"\" && this.state.summonerId !== this.props.summoner.id) this.fetchRankedStats();\r\n        const singleRank =  this.state.rankedStats.map(single => <SummonerRankedStatsSingle key={single.id} rank={single}/>) \r\n    return (\r\n        <React.Fragment>\r\n            {this.state.rankedStats.length !== 0 ? \r\n                <div className=\"summonerData__item summonerRankedStats\">\r\n                {singleRank}\r\n                {<SummonerRankedStatsTTF summonerId={this.state.summonerId} summonerName={this.state.summonerName} cors={this.props.cors} region={this.props.region} apiKey={this.props.apiKey}/>\r\n                }\r\n            </div>\r\n            : \"\"\r\n            }\r\n        </React.Fragment>\r\n    )\r\n    }\r\n}\r\n \r\nexport default SummonerRankedStats;","import React,{Component} from 'react';\r\nimport '../../sass/SummonerMasteryPointsSingle.sass'\r\n\r\nclass SummonerMasteryPoints extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            nickName: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let champName = \"\"\r\n        this.props.champNames.forEach(single => {\r\n            if(single.key === this.props.champId) champName=single.name\r\n        })\r\n            \r\n    this.setState({nickName: champName})\r\n        \r\n    }\r\n        \r\n    \r\n\r\n    render(){\r\n        return ( \r\n            <React.Fragment>\r\n               { this.state.nickName !== \"\" ?\r\n                <div className=\"summonerMasteryPoints__single\">\r\n                    <img src={`https://ddragon.leagueoflegends.com/cdn/${this.props.patch}/img/champion/${this.state.nickName}.png`} alt=\"Mastery level img\" className=\"summonerMasteryPoints__image\"/>\r\n                    <img src={`./images/mastery/lvl${this.props.champLevel}.png`} alt=\"Mastery lvl img\" className=\"summonerMasteryPoints__masteryLvl\"/>\r\n                    <p className=\"summonerMasteryPoints__champScore\"><span className=\"summonerMasteryPoints__champScore--bold\">{this.props.champPoints.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1.')}</span> pts</p>\r\n                </div>\r\n                : \"\"}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n \r\nexport default SummonerMasteryPoints;","import React, {Component} from 'react';\r\nimport SummonerMasteryPointsSingle from './SumonerMasteryPointsSingle.js'\r\nimport '../../sass/SummonerMasteryPoints.sass'\r\n\r\nclass SummonerMasteryPoints extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            summonerId: \"\",\r\n            masteryData: []\r\n        }\r\n    }\r\n\r\n    fetchMasteryData = () => {\r\n        fetch(`${this.props.cors}https://${this.props.region}.api.riotgames.com/lol/champion-mastery/v4/champion-masteries/by-summoner/${this.props.summoner.id}?api_key=${this.props.apiKey}`)\r\n        .then(resp => resp.json())\r\n        .then(data => {\r\n            const masteryPoints = [];\r\n            if(data.length !== 0 && data.length >=4){\r\n                for(let i=0;i<4;i++){\r\n                    masteryPoints.push({\"champLevel\": data[i].championLevel,\r\n                                        \"champPoints\": data[i].championPoints,\r\n                                        \"champId\": data[i].championId})\r\n                }\r\n                this.setState({summonerId: this.props.summoner.id, masteryData: masteryPoints})\r\n            } else {\r\n                this.setState({summonerId: this.props.summoner.id, masteryData: []})\r\n            }        \r\n        }) \r\n    }\r\n\r\n    render(){\r\n        if(this.props.summonerId !== \"\" && this.state.summonerId !== this.props.summoner.id) this.fetchMasteryData();\r\n        const champMastery = this.state.masteryData.map(single => <SummonerMasteryPointsSingle key={single.champId} champLevel={single.champLevel} champPoints={single.champPoints} champId={single.champId} patch={this.props.patch} champNames={this.props.champNames}/>)\r\n        \r\n        return (\r\n            <React.Fragment>\r\n            {this.state.masteryData.length !== 0 ? \r\n                <div className=\"summonerData__item summonerMasteryPoints\">\r\n                    {champMastery}\r\n                </div>\r\n            : \"\"\r\n            }\r\n        </React.Fragment>\r\n        )\r\n    }\r\n}\r\n \r\nexport default SummonerMasteryPoints;","import React from 'react';\r\nimport '../../../sass/SummonerHistoryItemsSingle.sass'\r\n\r\nconst SummonerHistoryItemsSingle = (props) => {\r\n    return (  \r\n        <img src={`https://ddragon.leagueoflegends.com/cdn/${props.patch}/img/item/${props.id}.png`} alt=\"Item img\" className=\"itemsList__singleItem\"/>\r\n    );\r\n}\r\n \r\nexport default SummonerHistoryItemsSingle;","import React from 'react';\r\nimport SummonerHistoryItemsSingle from './SummonerHistoryItemsSingle.js'\r\nimport '../../../sass/SummonerHistoryItemsList.sass'\r\n\r\nconst SummonerHistoryItemsList = (props) => {\r\n\r\n    const getItems = () => {\r\n        const itemList = [props.itemList.item0,props.itemList.item1,props.itemList.item2,props.itemList.item3,props.itemList.item4,props.itemList.item5,props.itemList.item6]\r\n        return itemList;\r\n    }\r\n\r\n    const singleItem = getItems().filter(single => single !== 0).map((ele,index) => <SummonerHistoryItemsSingle key={index} patch={props.patch} id={ele}/>)\r\n    return (  \r\n \r\n        <div className=\"itemsList\">\r\n            {singleItem}\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default SummonerHistoryItemsList;","import React from 'react';\r\nimport '../../../sass/SummonerHistorySinglePlayer.sass'\r\nimport SummonerHistoryItemsList from '../Items/SummonerHistoryItemsList.js'\r\n\r\nconst SummonerHistorySinglePlayer = (props) => {\r\n   \r\n\r\n    const getChampionName = () => {\r\n        let champName = \"\"\r\n        props.champNames.forEach(single => {\r\n            if(single.key === props.champion) champName=single.name\r\n        })\r\n        return champName\r\n    }\r\n\r\n    const getSummonerLane = () => {\r\n        if(props.playerStats.length !== 0 ){\r\n            const lane = props.playerStats[0].timeline.lane;\r\n            const role = props.playerStats[0].timeline.role;\r\n            if(role === \"SOLO\" || role === \"DUO\" || role === \"NONE\"){\r\n                if(lane === \"BOTTOM\") return \"CARRY\"\r\n                else return lane\r\n            }\r\n            else \r\n                return role.slice(4,role.length)\r\n\r\n        }\r\n    }\r\n\r\n    const lane = getSummonerLane()\r\n    return (\r\n        <div className=\"historyGameSingle__playerInfo playerInfo\">\r\n            <img src={`https://ddragon.leagueoflegends.com/cdn/${props.patch}/img/champion/${getChampionName()}.png`} alt=\"Champion img\" className=\"playerInfo__champImg\"/>\r\n            {props.queue !== 450 ? \r\n            <div className=\"playerInfo__summonerLane\">\r\n                <img src={lane === \"NONE\" ? `./images/lane/TOP.png` : `./images/lane/${lane}.png`} alt=\"Lane img\" className=\"playerInfo__laneImg\"/>\r\n                <h3 className=\"playerInfo__lane\">{lane === \"NONE\" ? \"TOP\" : lane}</h3>\r\n            </div>\r\n            : \" \"}\r\n            <div className=\"playerInfo__spells\">\r\n                <img className=\"playerInfo__singleSpell\" src={`./images/spells/${props.playerStats[0].spell1Id}.png`} alt=\"Spell img\"/>\r\n                <img className=\"playerInfo__singleSpell\" src={`./images/spells/${props.playerStats[0].spell2Id}.png`} alt=\"Spell img\"/>\r\n            </div>\r\n            <div className=\"playerInfo__perks\">\r\n                <img src={`https://opgg-static.akamaized.net/images/lol/perk/${props.playerStats[0].stats.perk0}.png`} alt=\"singlePerk\" className=\"playerInfo__singlePerk\"/>\r\n                <img src={`https://opgg-static.akamaized.net/images/lol/perkStyle/${props.playerStats[0].stats.perkSubStyle}.png`} alt=\"singlePerk\" className=\"playerInfo__singlePerk\"/>\r\n            </div>\r\n            <p className=\"playerInfo__stats\">{`${props.playerStats[0].stats.kills} / ${props.playerStats[0].stats.deaths} / ${props.playerStats[0].stats.assists}`}</p>\r\n            <p className=\"playerInfo__goldCS\"><span className=\"playerInfo__goldCS--bold\">{props.playerStats[0].stats.goldEarned}</span>{` gold / `}<span className=\"playerInfo__goldCS--bold\">{props.playerStats[0].stats.totalMinionsKilled}</span>{` CS`}</p>\r\n            <p className=\"playerInfo__dmgDealt\">Damage <br/><span className=\"playerInfo__dmgDealt--bold\">{props.playerStats[0].stats.totalDamageDealtToChampions}</span></p>\r\n            <p className=\"playerInfo__wards\">Wards placed: <span className=\"playerInfo__wards--bold\">{props.playerStats[0].stats.wardsPlaced}</span></p>\r\n            <div className=\"playerInfo__itemList\"> \r\n                {<SummonerHistoryItemsList patch={props.patch} itemList={props.playerStats[0].stats}/>}\r\n            </div>\r\n        </div>\r\n      );\r\n}\r\n \r\nexport default SummonerHistorySinglePlayer;","import React from 'react';\r\nimport '../../../sass/SummonerHistoryGamesTeams.sass'\r\n\r\nconst SummonerHistoryGamesTeams = (props) => {\r\n\r\n    return ( \r\n        <>\r\n            <h3 className=\"teams__teamName\">{`Team ${props.teamData.teamId === 100 ? \"One\" : \"Two\"}`}</h3>\r\n            <p className=\"teams__gameStatus\">{props.teamData.win === \"Win\" ? \"Win\" : \"Lose\"}</p>\r\n            <div className=\"teams__objectiveContainer objectiveContainer\">\r\n                <div className=\"objectiveContainer__item\">\r\n                    <img src=\"./images/specialObj/inhibitors.png\" alt=\"Inhib img\" className=\"objectiveContainer__image\"/>\r\n                    <span className=\"objectiveContainer__number\">{props.teamData.inhibitorKills}</span>\r\n                </div>\r\n                <div className=\"objectiveContainer__item\">\r\n                    <img src=\"./images/specialObj/towers.png\" alt=\"Towers img\" className=\"objectiveContainer__image\"/>\r\n                    <span className=\"objectiveContainer__number\">{props.teamData.towerKills}</span>\r\n                </div>\r\n                <div className=\"objectiveContainer__item\">\r\n                    <img src=\"./images/specialObj/dragons.png\" alt=\"Dragons img\" className=\"objectiveContainer__image\"/>\r\n                    <span className=\"objectiveContainer__number\">{props.teamData.dragonKills}</span>\r\n                </div>\r\n                <div className=\"objectiveContainer__item\">\r\n                    <img src=\"./images/specialObj/baron.png\" alt=\"Baron img\" className=\"objectiveContainer__image\"/>\r\n                    <span className=\"objectiveContainer__number\">{props.teamData.baronKills}</span>\r\n                </div>\r\n                <div className=\"objectiveContainer__item\">\r\n                    <img src=\"./images/specialObj/herald.png\" alt=\"Herald img\" className=\"objectiveContainer__image\"/>\r\n                    <span className=\"objectiveContainer__number\">{props.teamData.riftHeraldKills}</span>\r\n                </div>\r\n            </div>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default SummonerHistoryGamesTeams;","import React from 'react';\r\nimport '../../../sass/SummonerHistorySingleTeamItem.sass'\r\nimport SummonerHistoryItemsList from '../Items/SummonerHistoryItemsList'\r\n\r\nconst SummonerHistorySingleTeamItem = (props) => {\r\n\r\n    const champName= () => {\r\n        let name = \"\";\r\n        props.champNames.forEach(single => {\r\n            if(single.key === props.playerData.championId)\r\n                name=single.name\r\n        })\r\n        return name\r\n    }\r\n\r\n    return (  \r\n        <div className=\"teamData__singleItem\">\r\n            <img src={`https://ddragon.leagueoflegends.com/cdn/${props.patch}/img/champion/${champName()}.png`} alt=\"Champion img\" className=\"teamData__champImg\"/> \r\n            <p className=\"teamData__champLvl\">{props.playerData.stats.champLevel}</p>\r\n            <div className=\"teamData__spells\">\r\n                <img className=\"teamData__singleSpell\" src={`./images/spells/${props.playerData.spell1Id}.png`} alt=\"Spell img\"/>\r\n                <img className=\"teamData__singleSpell\" src={`./images/spells/${props.playerData.spell2Id}.png`} alt=\"Spell img\"/>\r\n            </div>\r\n            <h3 className=\"teamData__playerNick\">{props.playerData.nick}</h3>\r\n            <p className=\"teamData__playerStats\">{`${props.playerData.stats.kills} / ${props.playerData.stats.deaths} / ${props.playerData.stats.assists}`}</p>\r\n            <p className=\"teamData__goldCS\"><span className=\"teamData__goldCS--bold\">{props.playerData.stats.goldEarned}</span>{` gold / `}<span className=\"teamData__goldCS--bold\">{props.playerData.stats.totalMinionsKilled}</span>{` CS`}</p>\r\n            <p className=\"teamData__dmgDealt\">Damage <br/><span className=\"teamData__dmgDealt--bold\">{props.playerData.stats.totalDamageDealtToChampions}</span></p>\r\n            <p className=\"teamData__wards\">Wards placed: <span className=\"teamData__wards--bold\">{props.playerData.stats.wardsPlaced}</span></p>\r\n            <div className=\"teamData__itemList\">\r\n                <SummonerHistoryItemsList patch={props.patch} itemList={props.playerData.stats}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default SummonerHistorySingleTeamItem;","import React from 'react';\r\nimport SummonerHistorySingleTeamItem from './SummonerHistorySingleTeamItem.js'\r\n\r\nconst SummonerHistorySingleTeam = (props) => {\r\n\r\n    const getSinglePlayerStats = () => {\r\n        const player = []\r\n        props.teamData.forEach((ele,index) => {\r\n            if(index <= 4){\r\n                player.push({\"championId\": ele.championId, \"participantId\": ele.participantId, \"nick\": props.teamData[5][index].nickname,\r\n                             \"spell1Id\": ele.spell1Id, \"spell2Id\": ele.spell2Id, \"teamId\": ele.teamId, \"stats\": ele.stats})\r\n            }\r\n        })\r\n        return player;\r\n    }\r\n \r\n    const playerData = getSinglePlayerStats();\r\n    const singlePlayer = playerData.map(ele => <SummonerHistorySingleTeamItem key={ele.championId} patch={props.patch} playerData={ele} champNames={props.champNames}/>)\r\n\r\n    return ( \r\n        <>\r\n            {singlePlayer}\r\n        </>\r\n     );\r\n}\r\n \r\nexport default SummonerHistorySingleTeam;","import React, {Component} from 'react';\r\n\r\nimport '../../sass/SummonerHistoryGamesSingle.sass' \r\nimport SummonerHistorySinglePlayer from './SinglePlayer/SummonerHistorySinglePlayer';\r\nimport SummonerHistoryGamesTeams from './Teams/SummonerHistoryGamesTeams'\r\nimport SummonerHistorySingleTeam from './SingleTeam/SummonerHistorySingleTeam'\r\n\r\n\r\nclass SummonerHistoryGamesSingle extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            matchId: \"\",\r\n            gameData: [],\r\n            teamOneData: [],\r\n            teamTwoData: [],\r\n            active: false\r\n        }\r\n    }\r\n\r\n\r\n    fetchGameData = () => {\r\n        fetch(`${this.props.cors}https://${this.props.region}.api.riotgames.com/lol/match/v4/matches/${this.props.matchId}?api_key=${this.props.apiKey}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                const gameData = [];\r\n                Object.entries(data).forEach(([key,value]) => gameData.push({\"name\": key,\"value\": value}))\r\n                this.setState({matchId: this.props.matchId, gameData: gameData})\r\n                return gameData;\r\n            })\r\n            .then(gameData => {\r\n                const teamOne = [];\r\n                const teamTwo = [];\r\n                gameData[11].value.forEach(single => {\r\n                    if(single.teamId === 100) {\r\n                        teamOne.push({\"championId\": single.championId,\r\n                                    \"participantId\": single.participantId,\r\n                                    \"spell1Id\": single.spell1Id,\r\n                                    \"spell2Id\": single.spell2Id,\r\n                                    \"stats\": single.stats,\r\n                                    \"teamId\": single.teamId,\r\n                                    \"lane\": single.timeline.lane,\r\n                                    \"role\": single.timeline.role})\r\n                    } else if (single.teamId === 200) {\r\n                        teamTwo.push({\"championId\": single.championId,\r\n                                    \"participantId\": single.participantId,\r\n                                    \"spell1Id\": single.spell1Id,\r\n                                    \"spell2Id\": single.spell2Id,\r\n                                    \"stats\": single.stats,\r\n                                    \"teamId\": single.teamId,\r\n                                    \"lane\": single.timeline.lane,\r\n                                    \"role\": single.timeline.role})\r\n                    }\r\n                })\r\n                const teamOneParticipants = [];\r\n                const teamTwoParticipants = [];\r\n\r\n                gameData[12].value.forEach((ele,index) => {\r\n                    \r\n                    if(index+1 <= 5 ){\r\n                        teamOne.forEach(single => {\r\n                            \r\n                            if(single.participantId === ele.participantId){\r\n                                teamOneParticipants.push({\"nickname\": ele.player.summonerName, \"profileIcon\": ele.player.profileIcon})\r\n                                \r\n                            }\r\n                        })\r\n                    } else {\r\n                            teamTwo.forEach(single => {\r\n                                if(single.participantId === ele.participantId){\r\n                                    teamTwoParticipants.push({\"nickname\": ele.player.summonerName, \"profileIcon\": ele.player.profileIcon})\r\n                                }\r\n                            })\r\n                    }\r\n                })\r\n                teamOne.push(teamOneParticipants) \r\n                teamTwo.push(teamTwoParticipants);\r\n\r\n                this.setState({teamOneData: teamOne,teamTwoData: teamTwo})\r\n   \r\n            })\r\n           \r\n        \r\n    }\r\n\r\n\r\n    getQueueName = (queueId) => {\r\n        if(queueId === 400) return  \"Draft Pick\"; \r\n        else if(queueId === 420) return  \"Ranked Solo/Duo\";\r\n        else if(queueId === 430) return \"Blind Pick\"; \r\n        else if(queueId === 440) return \"Ranked Flex\"; \r\n        else if(queueId === 450) return \"ARAM\"; \r\n        else return \"Other\"\r\n      \r\n    }    \r\n\r\n     getGameDuration = (nrOfSecond) => {\r\n        const pad = function (num, size) {\r\n            return ('000' + num).slice(size * -1);\r\n        };\r\n        const time = parseFloat(nrOfSecond).toFixed(3);\r\n        const hours = Math.floor(time / 60 / 60);\r\n        const minutes = Math.floor(time / 60) % 60;\r\n        if (hours !== 0) {\r\n            return pad(hours, 2) + ' hours ' + pad(minutes, 2) + ' minutes ';\r\n        } else {\r\n            return pad(minutes, 2) + ' minutes ';\r\n        }\r\n\r\n    }\r\n\r\n    getMainSummonerData = () => {\r\n        let summonerId = \"\"\r\n        let teamId = \"\"\r\n        const playerStats = [];\r\n        const teamOneStats = [];\r\n        const teamTwoStats = [];\r\n        let win = \"\"\r\n        if(this.state.gameData.length !== 0) {\r\n            this.state.gameData[12].value.forEach(ele => {\r\n                if(ele.player.summonerName === this.props.nick) {\r\n                    summonerId = ele.participantId\r\n                }\r\n            })\r\n            this.state.gameData[11].value.forEach(single => {\r\n                if(single.participantId === summonerId) {\r\n                    teamId = single.teamId\r\n                    playerStats.push(single)\r\n                }\r\n            })\r\n            this.state.gameData[10].value.forEach(el => {\r\n                if(teamId === el.teamId) win = el.win;\r\n                if(el.teamId === 100) teamOneStats.push(el)\r\n                else if (el.teamId === 200) teamTwoStats.push(el)\r\n            })\r\n        }\r\n\r\n        return {win,playerStats,teamOneStats,teamTwoStats}\r\n    }\r\n\r\n    handleClick= () => {\r\n        const currentState = this.state.active;\r\n        this.setState({ active: !currentState });\r\n    }\r\n    \r\n    render(){\r\n        if(this.props.matchId !== \"\" && this.state.matchId !== this.props.matchId) this.fetchGameData();\r\n        const {win,playerStats} = this.getMainSummonerData()\r\n        return (  \r\n            <React.Fragment>\r\n                {this.state.gameData.length !== 0 && playerStats.length !== 0? \r\n                    <div className={`summonerHistoryGames__single historyGameSingle ${win === \"Win\" ? \"historyGameSingle--win\" : \"historyGameSingle--fail\"}`}>\r\n                        <h3 className=\"historyGameSingle__queue\">{`${this.getQueueName(this.state.gameData[4].value)} `}&#8901;<span className=\"historyGameSingle__queue--duration\">{` ${this.getGameDuration(this.state.gameData[3].value)}`}</span></h3>\r\n                        {<SummonerHistorySinglePlayer patch={this.props.patch} champNames={this.props.champNames} champion={this.props.champion} playerStats={playerStats} queue={this.state.gameData[4].value}/>}\r\n                        <button className={`far ${this.state.active === false ? \"fa-arrow-alt-circle-down\" : \"fa-arrow-alt-circle-up\"} historyGameSingle__button`} onClick={this.handleClick}></button>\r\n                        {this.state.active !== false ? \r\n                        <div className=\"historyGameSingle__container teams\">\r\n                            <div className={`teams__singleItem ${this.state.gameData[10].value[0].win === \"Win\" ? \"teams__singleItem--win\" : \"teams__singleItem--lose\"}`}>\r\n                                <div className=\"teams__teamInfo\">\r\n                                    <SummonerHistoryGamesTeams teamData={this.state.gameData[10].value[0]}/>\r\n                                </div>\r\n                                <div className=\"teams__teamData teamData\">\r\n                                    <SummonerHistorySingleTeam patch={this.props.patch} teamData={this.state.teamOneData} champNames={this.props.champNames}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className={`teams__singleItem ${this.state.gameData[10].value[1].win === \"Win\" ? \"teams__singleItem--win\" : \"teams__singleItem--lose\"}`}>\r\n                                <div className=\"teams__teamInfo\">\r\n                                    <SummonerHistoryGamesTeams teamData={this.state.gameData[10].value[1]}/>\r\n                                </div>\r\n                                <div className=\"teams__teamData teamData\">\r\n                                    <SummonerHistorySingleTeam patch={this.props.patch} teamData={this.state.teamTwoData} champNames={this.props.champNames}/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        : \"\"}\r\n                    </div>\r\n                : \"\"}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n    \r\n}\r\n \r\nexport default SummonerHistoryGamesSingle;","import React, { Component } from 'react';\r\nimport SummonerHistoryGamesSingle from './SummonerHistoryGamesSingle.js'\r\nimport '../../sass/SummonerHistoryGames.sass' \r\n\r\n\r\nclass SummonerHistoryGames extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            summonerId: \"\",\r\n            gameHistory: []\r\n        }\r\n    }\r\n\r\n    fetchHistoryGamesData = () => {\r\n        fetch(`${this.props.cors}https://${this.props.region}.api.riotgames.com/lol/match/v4/matchlists/by-account/${this.props.summoner.accountId}?api_key=${this.props.apiKey}`)\r\n            .then(resp => resp.json())\r\n            .then(data => {\r\n                //console.log(data)\r\n                if(data.matches !== undefined){\r\n                const history = [];\r\n                data.matches.forEach((singleGame,index) => {\r\n                    if(index <= 9) history.push(singleGame)\r\n                })\r\n                this.setState({summonerId: this.props.summoner.id, gameHistory: history})\r\n                } else {\r\n                    this.setState({summonerId: this.props.summoner.id, gameHistory: []})\r\n                }\r\n            })\r\n    }\r\n\r\n    render(){\r\n        if(this.props.summoner.id !== \"\" && this.state.summonerId !== this.props.summoner.id) this.fetchHistoryGamesData();\r\n        const singleGame = this.state.gameHistory.map((single,index) => <SummonerHistoryGamesSingle key={single.gameId} matchId={single.gameId} champion={single.champion}  patch={this.props.patch} cors={this.props.cors} region={this.props.region} apiKey={this.props.apiKey} champNames={this.props.champNames} nick={this.props.summoner.name} icon={this.props.summoner.profileIconId}/>)\r\n        return(\r\n            <React.Fragment>\r\n                {this.state.gameHistory.length !== 0 ? \r\n                <div className=\"summonerData__item summonerHistoryGames\">\r\n                    {singleGame}\r\n                </div>\r\n                : \"\"}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n \r\nexport default SummonerHistoryGames;","import React from 'react';\r\nimport '../sass/SummonerData.sass'\r\nimport SummonerIcon from './SummonerIcon/SummonerIcon.js'\r\nimport SummonerRankedStats from './SummonerRankedStats/SummonerRankedStats.js'\r\nimport SummonerMasteryPoints from './SummonerMasteryPoints/SummonerMasteryPoints.js'\r\nimport SummonerHistoryGames from './SummonerHistoryGames/SummonerHistoryGames.js'\r\n\r\n\r\nconst SummonerData = (props) => {\r\n    return ( \r\n        <section className=\"summonerData\">\r\n           <SummonerIcon apiKey={props.apiKey} cors={props.cors} patch={props.patch} region={props.region} icons={props.icons} summoner={props.summData}/>\r\n           <SummonerRankedStats apiKey={props.apiKey} cors={props.cors} patch={props.patch} region={props.region} summoner={props.summData}/>\r\n           <SummonerMasteryPoints  apiKey={props.apiKey} cors={props.cors} patch={props.patch} region={props.region} summoner={props.summData} champNames={props.champNames}/>\r\n           <SummonerHistoryGames apiKey={props.apiKey} cors={props.cors} patch={props.patch} region={props.region} icons={props.icons} summoner={props.summData} champNames={props.champNames}/>\r\n        </section>\r\n     );\r\n}\r\n \r\nexport default SummonerData;","import React, { Component } from \"react\";\r\nimport \"../sass/App.sass\";\r\nimport SummonerData from \"./SummonerData.js\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      nickname: \"\",\r\n      region: \"eun1\",\r\n      status: 404,\r\n      serverResp: \"\",\r\n      patchVersion: \"\",\r\n      profileIcons: [],\r\n      summonerData: [],\r\n      champNames: []\r\n    };\r\n    this.apiKey = \"RGAPI-7b930d20-a303-4134-bc69-1514a2441a77\";\r\n    this.cors = \"https://cors-anywhere.herokuapp.com/\";\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(`https://ddragon.leagueoflegends.com/api/versions.json`)\r\n      .then(response => response.json())\r\n      .then(data =>\r\n        fetch(\r\n          `https://ddragon.leagueoflegends.com/cdn/${data[0]}/data/en_US/profileicon.json`\r\n        )\r\n      )\r\n      .then(response1 => response1.json())\r\n      .then(data1 => {\r\n        const icons = Object.values(data1.data);\r\n        this.setState({\r\n          patchVersion: data1.version,\r\n          profileIcons: icons\r\n        });\r\n        return fetch(\r\n          `https://ddragon.leagueoflegends.com/cdn/${data1.version}/data/en_US/champion.json`\r\n        );\r\n      })\r\n      .then(response2 => response2.json())\r\n      .then(data2 => {\r\n        const champNames = [];\r\n        Object.values(data2.data).forEach(single => {\r\n          champNames.push({ key: parseInt(single.key), name: single.id });\r\n        });\r\n        this.setState({ champNames: champNames });\r\n      });\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      nickname: event.target.value\r\n    });\r\n  };\r\n\r\n  handleChangeSelect = event => {\r\n    this.setState({ region: event.target.value });\r\n  };\r\n\r\n  handleClick = () => {\r\n    const insertNickname = document.querySelector(\".main__input\").value;\r\n\r\n    if(insertNickname.length !== 0){\r\n    fetch(\r\n      `${this.cors}https://${this.state.region}.api.riotgames.com/lol/summoner/v4/summoners/by-name/${insertNickname}?api_key=${this.apiKey}`\r\n    )\r\n      .then(resp => {\r\n        if (resp.status === 200) return resp.json();\r\n        else if (resp.status === 400) {\r\n          this.setState({ status: resp.status, serverResp: \"Bad request\" });\r\n          throw new Error(\"Bad request\");\r\n        } else if (resp.status === 401) {\r\n          this.setState({ status: resp.status, serverResp: \"Unauthorized\" });\r\n          throw new Error(\"Unauthorized\");\r\n        } else if (resp.status === 403) {\r\n          this.setState({ status: resp.status, serverResp: \"Invalid Api Key\" });\r\n          throw new Error(\"Invalid Api Key\");\r\n        } else if (resp.status === 404) {\r\n          this.setState({\r\n            status: resp.status,\r\n            serverResp: \"Summoner nickname not found\"\r\n          });\r\n          throw new Error(\"Summoner nickname not found\");\r\n        }\r\n      })\r\n      .then(data => {\r\n        this.setState({\r\n          status: 200,\r\n          serverResp: \"Ok\",\r\n          summonerData: data\r\n        });\r\n      })\r\n      .catch(error => console.log(error));\r\n    } else {\r\n      this.setState({ status: 0, serverResp: \"Insert summoner nickname\" });\r\n    }\r\n  };\r\n\r\n  handleKeyPress = event => {\r\n    if (event.key === \"Enter\") return this.handleClick();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"main\">\r\n          <h1 className=\"main__title\">League of Legends Stats</h1>\r\n          <h2 className=\"main__description\">\r\n            Choose server (region) and insert summoner nickname <br /> (example:\r\n            EUNE, TheWanh3da)\r\n          </h2>\r\n          <div className=\"main__container\">\r\n            <select\r\n              className=\"main__select\"\r\n              value={this.state.region}\r\n              onChange={this.handleChangeSelect}\r\n            >\r\n              <option value=\"eun1\" defaultValue>\r\n                Europe Nordic & East\r\n              </option>\r\n              <option value=\"euw1\">Europe West</option>\r\n              <option value=\"kr\">Korea</option>\r\n              <option value=\"jp1\">Japan</option>\r\n              <option value=\"na1\">North America</option>\r\n              <option value=\"oc1\">Oceania</option>\r\n              <option value=\"br1\">Brazil</option>\r\n              <option value=\"ru\">Russia</option>\r\n              <option value=\"tr1\">Turkey</option>\r\n            </select>\r\n            <input\r\n              className=\"main__input\"\r\n              type=\"text\"\r\n              placeholder=\"TheWanh3da\"\r\n              value={this.state.nickname}\r\n              onChange={this.handleChange}\r\n              onKeyPress={this.handleKeyPress}\r\n            />\r\n            <button onClick={this.handleClick} className=\"main__button\">\r\n              LoL<sub>S</sub>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {this.state.status !== 200 ? (\r\n          <p className=\"server__response\">{this.state.serverResp}</p>\r\n        ) : (\r\n          <SummonerData\r\n            apiKey={this.apiKey}\r\n            cors={this.cors}\r\n            nick={this.state.nickname}\r\n            patch={this.state.patchVersion}\r\n            region={this.state.region}\r\n            icons={this.state.profileIcons}\r\n            summData={this.state.summonerData}\r\n            champNames={this.state.champNames}\r\n          />\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}